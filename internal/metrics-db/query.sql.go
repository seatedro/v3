// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: query.sql

package db

import (
	"context"
	"time"
)

const getLatestMetrics = `-- name: GetLatestMetrics :one
SELECT 
    DATE(timestamp) as date,
    SUM(keypresses) as total_keypresses,
    SUM(mouse_clicks) as total_mouse_clicks
FROM metrics
WHERE DATE(timestamp) = (
    SELECT DATE(timestamp)
    FROM metrics
    ORDER BY timestamp DESC
    LIMIT 1
)
GROUP BY DATE(timestamp)
`

type GetLatestMetricsRow struct {
	Date             time.Time
	TotalKeypresses  int64
	TotalMouseClicks int64
}

func (q *Queries) GetLatestMetrics(ctx context.Context) (GetLatestMetricsRow, error) {
	row := q.db.QueryRowContext(ctx, getLatestMetrics)
	var i GetLatestMetricsRow
	err := row.Scan(&i.Date, &i.TotalKeypresses, &i.TotalMouseClicks)
	return i, err
}
